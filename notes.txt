custom banner:
https://devops.datenkollektiv.de/banner.txt/index.html

application.yml
Por cada microservicio, tiene que haber una base de datos diferente,
ahora estamos usando la misma base con diferentes schemas


- COMUNICACION ENTRE MICROSERVICIOS:
Rest template:
Services Discovery: Is the process of automatically detecting devices and services on a network, ej Eureka Server (es de spring)
muchos de estos atributos nos los da Spring Cloud.
Cuando hay muchas instancias de un mismo servicio por ej en diferentes ports, se usa un LoadBalancer que va repartiendo las peticiones a las diferentes instancias.
En este caso configuramos la clase RestTemplate con la anotattion @LoadBalanced y listo!


Openfeign: reduce la complejidad cuando usamos rest http clients.
basicamente cuando hay cosas que queremos compartir con varios microservicios, generamos un cliente Feign y podemos usarlo en todos los servicios.
es para evitar codigo duplicado, podemos compartir info entre los microservicios. en Feign se hace una interface q expone los metodos del cliente q queremos.